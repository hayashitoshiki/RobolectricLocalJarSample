def robolectricDependenciesFolder = project.rootDir.path + "/.robolectric-dependencies"

/**
 * ダウンロードするAPIレベル一覧
 * テストで使用しないバージョンはコメントアウト
 */
configurations {
    // API23
    robolectricRuntimeM
    // API24
    robolectricRuntimeN
    // API25
    robolectricRuntimeN_MR1
    // API26
    robolectricRuntimeO
    // API27
    robolectricRuntimeO_MR1
    // API28
    robolectricRuntimeP
    // API29
    robolectricRuntimeQ
    // API30
    robolectricRuntimeR
}

/**
 * 各バージョンごとのJAR一覧
 */
dependencies {
    // robolectric
    testImplementation "org.robolectric:robolectric:4.6.1"
    // 各バージョン毎のJar定義
    robolectricRuntimeM "org.robolectric:android-all-instrumented:6.0.1_r3-robolectric-r1-i1"
    robolectricRuntimeN "org.robolectric:android-all-instrumented:7.0.0_r1-robolectric-r1-i1"
    robolectricRuntimeN_MR1 "org.robolectric:android-all-instrumented:7.1.0_r7-robolectric-r1-i1"
    robolectricRuntimeO "org.robolectric:android-all-instrumented:8.0.0_r4-robolectric-r1-i1"
    robolectricRuntimeO_MR1 "org.robolectric:android-all-instrumented:8.1.0-robolectric-4611349-i1"
    robolectricRuntimeP "org.robolectric:android-all-instrumented:9-robolectric-4913185-2-i1"
    robolectricRuntimeQ "org.robolectric:android-all-instrumented:10-robolectric-5803371-i1"
    robolectricRuntimeR "org.robolectric:android-all-instrumented:11-robolectric-6757853-i1"
}

rootProject.task(type: Copy, "downloadRobolectricDependencies") {
    configurations.all { configuration ->
        if (configuration.name.startsWith("robolectricRuntime")) {
            from configuration
        }
    }
    into robolectricDependenciesFolder
}

project.afterEvaluate {
    tasks.all {
        if (it.name.startsWith("test")) {
            it.dependsOn(rootProject.tasks.findByName("downloadRobolectricDependencies"))
        }
    }
}


android {
    testOptions {
        unitTests.all {
            systemProperty 'robolectric.offline', 'true'
            systemProperty 'robolectric.dependency.dir', robolectricDependenciesFolder
        }
    }
}